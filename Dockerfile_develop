FROM python:3.10-bullseye

# Default arguments for user creation
ARG USERNAME=dockeruser
ARG PASSWORD=dockerpass
ARG USER_UID=65000
ARG USER_GID=$USER_UID

# Create the non-root user and home directory
RUN useradd -u $USER_UID -U -d /home/$USERNAME -s /bin/bash $USERNAME && \
    echo "$USERNAME:$PASSWORD" | chpasswd && \
    mkdir -p /home/$USERNAME && \
    chown $USER_UID:$USER_GID /home/$USERNAME

# Create project directories and set permissions
RUN mkdir -p /usr/src/project && chown $USER_UID:$USER_GID /usr/src/project
RUN mkdir -p /usr/src/venvs && chown $USER_UID:$USER_GID /usr/src/venvs
RUN chown $USER_UID:$USER_GID /usr/src/

RUN apt-get update && \
    apt-get install -y gdal-bin libgdal-dev && \
    rm -rf /var/lib/apt/lists/*

# Set the working directory to the project directory
WORKDIR /usr/src/project

# Install system packages as root
USER root
RUN apt-get update && apt-get install -y --no-install-recommends \
    unixodbc \
    locales \
    wget \
    gnupg2 \
    iputils-ping \
    tree \
    mariadb-client \
    gosu \
    sudo \
    bash \
    nano \
    && rm -rf /var/lib/apt/lists/*

# Configure and generate the en_US.UTF-8 locale
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    dpkg-reconfigure --frontend=noninteractive locales && \
    update-locale LC_ALL=en_US.UTF-8

ENV LC_ALL=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8

# ##### Microsoft SCCM endpoint setup (optional if needed) #####
# RUN echo "deb [arch=amd64] https://packages.microsoft.com/debian/10/prod buster main" > /etc/apt/sources.list.d/microsoft-prod.list && \
#     wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg && \
#     mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg && \
#     apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql18 && \
#     rm -rf /var/lib/apt/lists/*
# ##### Microsoft SCCM endpoint setup #####

# Allow the non-root user to use sudo without password
RUN echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Switch to the non-root user
USER $USERNAME

# Create and activate the virtual environment
RUN python -m venv /usr/src/venvs/app-main

# Copy requirements file and install
COPY --chown=$USERNAME:$USERNAME ./app-main/requirements.txt /usr/src/
RUN /usr/src/venvs/app-main/bin/pip install --upgrade pip && \
    /usr/src/venvs/app-main/bin/pip install -r /usr/src/requirements.txt

# Optional: Export a new requirements file from the installed environment
RUN mkdir -p /usr/src/project/app-main && \
    /usr/src/venvs/app-main/bin/pip freeze > /usr/src/project/app-main/requirements.txt

# Set default command
CMD ["/bin/bash"]
#CMD ["gunicorn", "--bind", "0.0.0.0:8099", "find_artek.wsgi:application", "--log-level", "debug", "--access-logfile", "-", "--error-logfile", "-"]